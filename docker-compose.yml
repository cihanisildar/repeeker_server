version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: repeeker_postgres
    environment:
      POSTGRES_DB: repeeker_db
      POSTGRES_USER: repeeker_user
      POSTGRES_PASSWORD: repeeker_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/migrations:/docker-entrypoint-initdb.d
    networks:
      - repeeker_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U repeeker_user -d repeeker_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: repeeker_redis
    command: redis-server --requirepass redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - repeeker_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: repeeker_app
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://repeeker_user:repeeker_password@postgres:5432/repeeker_db
      - REDIS_URL=redis://:redis_password@redis:6379
      - JWT_SECRET=dev-jwt-secret-change-in-production
      - JWT_ACCESS_SECRET=dev-jwt-access-secret-change-in-production
      - JWT_REFRESH_SECRET=dev-jwt-refresh-secret-change-in-production
      - NEXTAUTH_SECRET=dev-nextauth-secret-change-in-production
      - CORS_ORIGIN=http://localhost:3000
      - PORT=8080
      - LOG_LEVEL=debug
      - OPENAI_API_KEY=your_openai_api_key
      - OPENAI_MODEL=gpt-4-turbo-preview
    ports:
      - "8080:8080"
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
      - node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - repeeker_network
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional for local development)
  nginx:
    image: nginx:alpine
    container_name: repeeker_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - repeeker_network
    profiles:
      - production
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  node_modules:
    driver: local

networks:
  repeeker_network:
    driver: bridge 