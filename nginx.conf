events {
    worker_connections 1024;
}

http {
    upstream nodejs_backend {
        server localhost:8080;
    }

    # API server (for api.repeeker.com)
    server {
        listen 443 ssl;
        server_name api.repeeker.com;

        ssl_certificate /etc/nginx/ssl/repeeker.com.crt;
        ssl_certificate_key /etc/nginx/ssl/repeeker.com.key;

        # Handle preflight requests
        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'https://www.repeeker.com' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With, Accept, Origin' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 86400 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }

            # Add CORS headers for all other requests
            add_header 'Access-Control-Allow-Origin' 'https://www.repeeker.com' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            proxy_pass http://nodejs_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Main server (for www.repeeker.com)
    server {
        listen 443 ssl;
        server_name www.repeeker.com;

        ssl_certificate /etc/nginx/ssl/repeeker.com.crt;
        ssl_certificate_key /etc/nginx/ssl/repeeker.com.key;

        location / {
            proxy_pass http://nodejs_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTP redirects
    server {
        listen 80;
        server_name api.repeeker.com;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 80;
        server_name www.repeeker.com;
        return 301 https://$server_name$request_uri;
    }
} 